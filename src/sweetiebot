#!/usr/bin/env bash

##
# sweetie-bot — Automated package repository cannibaliser
# 
# Copyright © 2013  Mattias Andrée (maandree@member.fsf.org)
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

echo 'Scroll acquisition program.'
echo 'The fun begins immediately!'

echo
echo

for arg in "$@"; do
    if [ "$arg" = "--water" ]; then
	echo "Augh, but the water makes me feel funny."
	echo
    fi
done

MODULE_DIR='/usr/lib/sweetie-bot/'

MODULES=()

echo 'Scanning...'

find "$MODULE_DIR" | grep -v '~$' | while read module; do
    MODULES+=( "$module" )
#    . "$module"
#    if [ ! $? = 0 ]; then
#	echo -e '\e[31mHelp, assistence is required. I believe there is something wrong with me!\e[00m'
#    fi
done

for exit_value in ${PIPESTATUS[*]}; do
    if [ ! $exit_value = 0 ]; then
	echo 'Oops, an error has occurred.'
	exit $exit_value
    fi
done

if [ ! ${#MODULES[@]} = 0 ]; then
    echo 'Modules located.'
else
    echo 'Insuffient about of modules, none has been locaeted!'
fi

echo 'The fun levels will be at maximum efficiency!'
echo 'I should locate my ignore list, settings other objects of FUN.'

. '/etc/sweetie-bot.conf'

echo 'Humm, insufficient beauty...'

_sorted=()
for mod in "${MODULES[@]}"; do
    echo "${mod:${#MODULE_DIR}}"
done | sort | while read mod; do
    _sorted+=( "$mod" )
done
MODULES=( "${_sorted[@]}" )

for exit_value in ${PIPESTATUS[*]}; do
    if [ ! $exit_value = 0 ]; then
	echo 'My primary function is failure!'
	exit $exit_value
    fi
done

_sorted=()
for mod in "${IGNORE[@]}"; do
    echo "$mod"
done | sort | while read mod; do
    _sorted+=( "$mod" )
done
IGNORE=( "${_sorted[@]}" )

for exit_value in ${PIPESTATUS[*]}; do
    if [ ! $exit_value = 0 ]; then
	echo 'My primary function is failure!'
	exit $exit_value
    fi
done

echo 'I have arranges objects in a estatically pleasing manner.'



echo 'SUCCESS!!!'

